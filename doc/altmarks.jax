*altmarks.jax*	現在地を記録し、管理する。
==============================================================================
暫定版ヘルプドキュメント
==============================================================================

CONTENTS					*altmarks_contents*

==============================================================================
簡単な説明					*altmarks_quicktutorial*
 （※デフォルトキーバインドで説明している）
 ・mmで現在地を記録（マーク）する。
 ・すでにマークされているところにmmでマークの詳細編集を行う。
 ・mj mkで過去のマークをブラウズする。
 ・mh mlで現在地マークのマークグループ|altmarks-Markgroups|所属を変更する。
 ・mi maでコメント付きでマークする（miは新規・総書換／maは既存コメに追記）
 ・一度目のmoで現在地をワンタイムマークする。二度目のmoで過去の
	ワンタイムマークに跳ぶ。
 ・mdで現在行のマークを削除する。
 ・msで現在行のマークの詳細情報を表示。

==============================================================================
マークのecho表示の見方
 マークジャンプ時やmsでステータスを見たときに表示される内容の説明。
                                                   マークに付けたコメント↓
                  ↓マーク当時の行の内容context  ↓トータルマーク数 >
 AltMarks: [Debug] "  let g:markgroups = [" (2/5)(TTL:8) 辞書を含むリスト
<　　　    ↑所属グループ名                  ↑
               (現在マークはグループの何番目か/現在グループでのマーク総数)

 この例では現在、[Debug]グループの2番目のマークにいるということ。
 そして全てのグループを併せたマーク数は8ということ。

==============================================================================
仕様
 ・ホームディレクトリ（デフォルト）に設定ファイル・ディレクトリを作成する。
 ・正常終了時にマークを設定ファイルに書き込むので、クラッシュ時には
	マークの記録は失われてしまう。
 ・Altmarksのマークはヤンクやデリートなどのオペレータとして使えない。
 ・無名バッファにマークできない。
 ・ファイルの編集などでマークより前の行が追加されるとマーク位置がズレる。
	マーク当時のコンテキスト文字列を見てズレを確認すること。
 ・しかしsignは行の増減に追随するようだ。だからsignとマークで齟齬が生じる。
 ・signの識別子(id)は100700325のような形式である。これは、初めの1が固定で、
	次の3桁がバッファ番号、最後の5桁が行番号である。
	（enablesign=1でマークしてから:sign placeを実行すると大凡理解できる
	だろう）
 ・よって、1000番以降のバッファ、100000行を越えるバッファではうまく動かない。
 ・signを使うと左に2行のカラムが追加されて折畳表示がそのカラムに食い込んで
	残念な感じになるのはVimの仕様。
 ・linehlした部分を行頭からvisual選択すると選択した部分がhl-Visualで
	ハイライトされない。よって選択部分が分かりづらい。Vimの問題。
 ・signを使うとビジュアル選択時のハイライトされている部分と実際に選択されて
	いる部分が食い違う現象が発生する。Vimの問題。
 ・signのある行はタブインデントが見かけ上揃わなくなる。Vimの問題。
 ・signのある行は'colorcolumn'の表示がずれる。Vimの問題。
 ・窓分割している状態でsign jumpするとカーソルが他窓に強制移動させられてしまう
	ことがある。Vimの問題。
 ・原因不明だが唐突にマークが消えることがある。過信は禁物。

 今後大いに改善・変更される可能性のあるもの~
 ・マークの行ハイライトが dark系用のものしかない

==============================================================================
グローバル変数
 ※暫定版なので変更する恐れあり。アップデート時に要チェック。

|g:altmarks_dir|					*g:altmarks_dir*
（文字列  規定値： '~/.altmarks/'）
 このディレクトリ以下にマーク保存ファイルを作成


|g:markgroups|						*g:markgroups*
（リスト  既定値：例に挙げたもの）
 マークグループ|altmarks-Markgroups|を例のように設定する。
 signハイライトのさせ方をここで定義する。
 例： >
 let g:markgroups = [
 \{'name': 'Default','enablesign':0, 'char': '', 'linehl': '', 'charhl': ''},
 \{'name': 'Debug','enablesign':1, 'char': '修',
                      \'linehl': 'linehl_blue', 'charhl': 'texthl_blue'},
 \{'name': 'Delete','enablesign':1,  'char': '消',
                      \'linehl': 'linehl_purple', 'charhl': 'texthl_purple'},
 \{'name': 'Issue','enablesign':1,  'char': '問',
                      \'linehl': 'linehl_red', 'charhl': 'texthl_red'},
 \{'name': 'Note','enablesign':1,  'char': '記',
                      \'linehl': 'linehl_green', 'charhl': 'texthl_green'},
 \]
<
 要素(key)	説明~
 name		グループ名
 enablesign	1だとsignが有効になる（マークがハイライトされて可視化される）
 char		横のカラムに表示される文字。全角1文字半角2文字
 linehl		マークされた行全体がこのハイライトグループでハイライトされる
 charhl		横のカラムに表示される文字がこのハイライトグループでハイライト



|g:defa_grouppoi|					*g:defa_grouppoi*
（数値  既定値：未定義）
 定義されていると起動時のs:grouppoiの値にこれが代入される。
 例えばg:defa_grouppoi=0だと一番目のマークグループが規定になる。
 g:defa_grouppoi=3だと四番目のマークグループが規定になる。


|g:defa_count_sign|					*g:defa_count_sign*
（数値  既定値：未定義）
 この値から上をsignのidとして利用する。（:h sign-place）


|g:disable_sign_at_loaded|			*g:disable_sign_at_loaded*
（数値  既定値：未定義）
 定義されているとVim起動時に前回終了時のマークのsignを有効にしない。


|g:disable_group_number_mapping|		*g:disable_group_number_mapping*
（任意  既定値：未定義）
 定義されているとm1～m9のグループ切換キーマップを無効にする。
 キーマップも参照。

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:nolist:
